///////////////////////////////////////////////////////////
//  AsymmetryGeneratorBehaviour.cs
//  Implementation of the Class AsymmetryGeneratorBehaviour
//  Generated by Enterprise Architect
//  Created on:      20-окт-2019 10:46:12
//  Original author: Heln
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;


namespace Domain
{
	public class AsymmetryGeneratorBehaviour : IGeneratorBehaviour
    {
	    public Mask Generate()
        {
            int x = 0;
            int y = 1;
            int numberOfColumns = 6;
            int numberOfRows = 2;
            int maxValue = 1000;
            int minValue = -999;

            Random rnd = new Random();
            Mask mask = new Mask(new List<MaskPixel>());

            for (int i = 0; i < numberOfRows; i++)
            {
                for (int j = 0; j < numberOfColumns; j++)
                {
                    int rndNumber = rnd.Next(minValue, maxValue);
                    mask.Pixels.Add(new MaskPixel(i - x, j - y, rndNumber));
                }
            }

            return mask;
		}
	}
}