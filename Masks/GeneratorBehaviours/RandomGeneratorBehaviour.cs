///////////////////////////////////////////////////////////
//  RandomGeneratorBehaviour.cs
//  Implementation of the Class RandomGeneratorBehaviour
//  Generated by Enterprise Architect
//  Created on:      20-окт-2019 10:46:21
//  Original author: Heln
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;


namespace Domain
{
	public class RandomGeneratorBehaviour : IGeneratorBehaviour
    {
	    public Mask Generate()
        {
            int x = 1;
            int y = 1;
            int numberOfColumns = 3;
            int numberOfRows = 6;
            int maxValue = 100;
            int minValue = -30;
            bool isEven = true;

            Random rnd = new Random();
            Mask mask = new Mask(new List<MaskPixel>());

            for (int i = 0; i < numberOfRows; i++)
            {
                if (i % 3 == 0)
                {
                    isEven = !isEven;
                }
                for (int j = 0; j < numberOfColumns; j++)
                {
                    if ((j % 2 == 0) != isEven)
                    {
                        int rndNumber = rnd.Next(minValue, maxValue);
                        mask.Pixels.Add(new MaskPixel(j - x, i - y, rndNumber));
                    }
                }
                isEven = !isEven;
            }

            return mask;
		}

	}

}